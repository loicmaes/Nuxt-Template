generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// MODELS

model User {
  uid        String    @id @default(uuid())
  username   String    @unique
  email      String    @unique
  password   String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  verifiedAt DateTime?

  authSessions         AuthSession[]
  accountVerifications AccountVerification[]
  passwordResets       PasswordReset[]

  @@map("users")
}

model AuthSession {
  token     String    @default(uuid())
  userUid   String
  createdAt DateTime  @default(now())
  expiresAt DateTime
  revokedAt DateTime?

  user User @relation(fields: [userUid], references: [uid], onDelete: Cascade)

  @@id([token, userUid])
  @@map("auth_sessions")
}

model AccountVerification {
  uid       String    @default(uuid())
  userUid   String
  createdAt DateTime  @default(now())
  expiresAt DateTime
  usedAt    DateTime?

  user User @relation(fields: [userUid], references: [uid], onDelete: Cascade)

  @@id([uid, userUid])
  @@map("account_verifications")
}

model PasswordReset {
  uid       String    @default(uuid())
  userUid   String
  createdAt DateTime  @default(now())
  expiresAt DateTime
  usedAt    DateTime?

  user User @relation(fields: [userUid], references: [uid], onDelete: Cascade)

  @@id([uid, userUid])
  @@map("password_resets")
}
